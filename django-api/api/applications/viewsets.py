from .serializers import ApplicationSerializer
from .models import Application
from rest_framework import viewsets
from rest_framework.permissions import IsAuthenticated
from rest_framework.response import Response
from rest_framework import status
from api.user.models import User
from django.core.mail import send_mail
from django.conf import settings

class ApplicationView(viewsets.ModelViewSet):
    permission_classes = (IsAuthenticated,)
    serializer_class = ApplicationSerializer
    queryset = Application.objects.all()

class CreateApplicationViewSet(viewsets.ModelViewSet):
    permission_classes = (IsAuthenticated,)
    http_method_names = ["post"]
    serializer_class = ApplicationSerializer

    def create(self, request, *args, **kwargs):
        application = Application.objects.create(
            sender=request.user,
            sendername=request.user.username,
            recipientname=User.objects.get(id=request.data.get("reciever")).username,
            reciever=User.objects.get(id=request.data.get("reciever")),
            message=request.data.get("message"),
            state="pending",
        )
        application.save()
        send_mail(
            subject="–£ –í–∞—Å –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
            message="–£ –í–∞—Å –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞",
            from_email=settings.EMAIL_HOST_USER,
            recipient_list=[application.reciever.email],
            fail_silently=False,
        )
        return Response({"success": True}, status.HTTP_200_OK)
    
class AcceptApplicationViewSet(viewsets.ModelViewSet):
    permission_classes = (IsAuthenticated,)
    http_method_names = ["post"]
    serializer_class = ApplicationSerializer

    def create(self, request, *args, **kwargs):
        # breakpoint()
        application_id = request.data
        application = Application.objects.get(id=application_id)
        sender = application.sender
        sender.phone = application.sender.phone_number
        application.state = "accepted"
        application.save()
        send_mail(
            subject="–ü—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ",
            message="–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ ProStudy! –ù–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É –ø—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç, –æ–∂–∏–¥–∞–π—Ç–µ —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è üòä",
            from_email=settings.EMAIL_HOST_USER,
            recipient_list=[application.sender.email],
            fail_silently=False,
        )
        send_mail(
            subject="–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –í–∞–º –∫–æ–Ω—Ç–∞–∫—Ç—ã –≤–∞—à–µ–≥–æ —É—á–µ–Ω–∏–∫–∞",
            message="–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ Prostudy! –°–≤—è–∂–∏—Ç–µ—Å—å —Å –í–∞—à–∏–º —É—á–µ–Ω–∏–∫–æ–º –∏ –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –æ –ø–µ—Ä–≤–æ–π –æ—Ñ—Ñ–ª–∞–π–Ω/–æ–Ω–ª–∞–π–Ω –≤—Å—Ç—Ä–µ—á–µ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤—Å–µ—Ö –¥–µ—Ç–∞–ª–µ–π —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã! –ñ–µ–ª–∞–µ–º –≤–∞–º —É–¥–∞—á–∏! –ö–æ–Ω—Ç–∞–∫—Ç—ã –≤–∞—à–µ–≥–æ —É—á–µ–Ω–∏–∫–∞: –ü–æ—á—Ç–∞: " + application.sender.email + " –¢–µ–ª–µ—Ñ–æ–Ω: " + application.sender.phone,
            from_email=settings.EMAIL_HOST_USER,
            recipient_list=[application.reciever.email],
            fail_silently=False,
        )
        return Response({"success": True }, status.HTTP_200_OK)
    
class GetApplicationSenderContactsViewSet(viewsets.ModelViewSet):
    permission_classes = (IsAuthenticated,)
    http_method_names = ["post"]
    serializer_class = ApplicationSerializer

    def create(self, request, *args, **kwargs):
        application_id = request.data
        application = Application.objects.get(id=application_id)
        return Response({"success": True, "phone_number": application.sender.phone_number, "email": application.sender.email }, status.HTTP_200_OK)